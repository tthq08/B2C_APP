<?php
/**
 * Created by PhpStorm.
 * User: iconblog
 * Date: 2017/9/22
 * Time: 下午3:28
 */

namespace app\sys\controller;


use think\Db;

class Nav extends AdminBase
{

    /**
     * api实例
     * @var mixed
     */
    protected $Nav;

    /**
     * Parent's _initialize()
     * @return void
     */
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->Nav = new \app\sys\api\Nav();
    }


    /**
     * 导航首页列表
     * @return mixed
     */
    public function index()
    {
        $id = empty(request()->param('id')) ? 0 : request()->param('id');
        // 显示所有一级导航位
        $this->Nav->setPositionId($id);
        $this->Nav->needPage = true;
        $lists = $this->Nav->selectPositions();
        // 获取当前导航位下的导航
        $navList = $this->Nav->selectNavs();
        // 获取上一级导航位
        $topList = $this->Nav->selectTopPositions();

        $tmp = ['lists'=>$lists,'page'=>$lists->render(),'nav_lists'=>$navList,'top_position'=>$topList,'topTree'=>$this->Nav->topTree(),'position'=>$this->Nav->getPosition()];
        $this->assign($tmp);
        return $this->fetch();
    }


    /**
     * ajax加载导航列表
     * @param $id
     * @return mixed
     */
    public function ajaxNavList($id)
    {
        $this->Nav->setPositionId($id);
        // 获取当前导航位下的导航
        $navList = $this->Nav->selectNavs(10);
        $tmp = ['nav_lists'=>$navList];
        $this->assign($tmp);
        return $this->fetch();
    }


    /**
     * 导航列表
     * @return mixed
     */
    public function lists($pid = 0,$showType = 0,$position='')
    {
        if( !empty($showType) ){// 分级显示
            // 获取所有导航
            $navList = $this->Nav->selectNav($pid);
            $parentInfo = $this->Nav->getNav($pid);
        }else{
            $navList = $this->Nav->selectAllNavs();
            $parentInfo = ['id'=>0];
        }
        $this->assign('parent',$parentInfo);

        $navs = [];
        foreach ($navList as $key=>$item){
            $navs[$key] = $item;
            $navs[$key]['parentInfo'] = $this->Nav->getNav($item['pid']);
            $navs[$key]['positionInfo'] = api('sys','Nav','getPosition',[$item['position']]);
        }
        $tmp = ['lists'=>$navs,'page'=>$navList->render()];
        $this->assign($tmp);
        return $this->fetch();
    }


    /**
     * 导航列表
     * @return mixed
     */
    public function listsFPosition($id='')
    {
        $this->Nav->setPositionId($id);
        $navList = $this->Nav->selectNavs();
        $parentInfo = ['id'=>0];

        $this->assign('parent',$parentInfo);

        $navs = [];
        foreach ($navList as $key=>$item){
            $navs[$key] = $item;
            $navs[$key]['parentInfo'] = $this->Nav->getNav($item['pid']);
            $navs[$key]['positionInfo'] = api('sys','Nav','getPosition',[$item['position']]);
        }
        $tmp = ['lists'=>$navs,'page'=>$navList->render()];
        $this->assign($tmp);
        return $this->fetch();
    }



    /**
     * 添加导航位
     * @return mixed
     */
    public function add_nav_position()
    {
        $id = empty(request()->param('id')) ? '' : request()->param('id');
        if( !empty($id) ){
            $this->Nav->setPositionId($id);
            $position = $this->Nav->getPosition();
            $this->assign('topPosition',$position);
        }else{
            $positions = $this->Nav->select1LevelPositions(false,true);
            $this->assign('positions',$positions);
        }
        return $this->fetch();
    }


    /**
     * 编辑导航位
     * @return mixed
     */
    public function edit_nav_position()
    {
        $id = request()->param('id');
        if( !empty($id) ){
            $position = $this->Nav->getPosition($id);
            $topPosition = $this->Nav->getPosition($position['top_position']);
            $topPositionList = $this->Nav->setPositionId($topPosition['top_position'])->selectPositions();
            switch ($position['link_type']){
                case 1:
                    $selectedLinkParam = api('shop','Goods','goodsInfo',[$position['link_param']]);
                    break;
                case 2:
                    $selectedLinkParam = api('shop','Goods','categoryInfo',[$position['link_param']]);
                    break;
                case 3:
                    $selectedLinkParam = api('web','Common','columnInfo',[$position['link_param']]);
                    break;
                case 4:
                    $selectedLinkParam = api('web','Common','contentInfo',[$position['link_param']]);
                    $selectedLinkParam['name'] = $selectedLinkParam['title'];
                    break;
                default:
                    $selectedLinkParam = ['id'=>'','name'=>''];
            }
            $this->assign('selectedLinkParam',$selectedLinkParam);
            $this->assign('positionList',$topPositionList);
            $this->assign('position',$position);
        }else{
            $this->error('请选择需要编辑的导航位!');
        }
        $positions = $this->Nav->selectPositions(false,true);
        $this->assign('positions',$positions);

        return $this->fetch();
    }


    /**
     * 保存导航位
     * @return mixed
     */
    public function save_nav_position()
    {
        $data = $this->post_data;
        if( empty($data['name']) ){
            $this->error(lang('nav_position_please_entry_nav_name'));
        }elseif ( empty($data['link_type']) ){
            $this->error(lang('nav_position_please_select_link_type'));
        }

        if( $data['link_type'] != 5 ){
            $data['link'] = api('sys','Nav','getUrl',[$data['link_type'],$data['link_param']]).$data['link_extra_param'];
        }
        if( empty($data['top_position']) ){
            $data['top_position'] = 0;
        }else{
            $top_position = [];
            foreach ($data['top_position'] as $key=>$item){
                $top_position[$key] = $item;
            }
            sort($top_position);
            $data['top_position'] = end($top_position);
        }
        $data['start_time'] = strtotime($data['start_time']);
        $data['end_time'] = strtotime($data['end_time']);
        // 保存数据
        if( empty($data['id']) ){
            $save = api('sys','Nav','saveNavPosition',[$data]);
            if( $save !== true ){
                sys_log(lang('comm_insert_error').':'.$save,0);  //操作结果写入系统日志
                $this->error($save);
            }else{
                sys_log(lang('comm_insert_success'),1);  //操作结果写入系统日志
                $this->success(lang('comm_insert_success'));
            }
        }else{
            $save = api('sys','Nav','updateNavPosition',[$data['id'],$data]);
            if( $save !== true ){
                sys_log(lang('comm_update_error').':'.$save,0);  //操作结果写入系统日志
                $this->error($save);
            }else{
                sys_log(lang('comm_update_success'),1);  //操作结果写入系统日志
                $this->success(lang('comm_update_success'));
            }
        }
    }


    /**
     * 删除导航
     * @return mixed
     */
    public function del_nav_position()
    {
        if( empty($this->post_data['id']) ){
            $this->error(lang('nav_position_please_select_delete_nav'));
        }
        $id = $this->post_data['id'];
        $del = api('sys','Nav','deleteNavPosition',[$id]);
        if( $del !== true ){
            sys_log(lang('comm_delete_error').':'.$del,0);  //操作结果写入系统日志
            $this->error($del);
        }else{
            sys_log(lang('comm_delete_success'),1);  //操作结果写入系统日志
            $this->success(lang('comm_delete_success'));
        }
    }


    /**
     * 修改字段值
     * @return mixed
     */
    public function set_nav_position_value()
    {
        if( empty(request()->param('field')) ){
            $this->error(lang('nav_position_please_select_edit_field'));
        }elseif ( empty(request()->param('id')) ){
            $this->error(lang('nav_position_please_select_nav'));
        }elseif ( null === request()->param('value') ){
            $this->error(lang('nav_position_please_entry_nav_field_value'));
        }
        $field = request()->param('field');
        $id = request()->param('id');
        $value = request()->param('value');

        $updateField = api('sys','Nav','setNavPositionField',[$id,$field,$value]);

        if( $updateField !== true ){
            sys_log(lang('comm_update_error').':'.$updateField,0);  //操作结果写入系统日志
            $this->error($updateField);
        }else{
            sys_log(lang('comm_update_success'),1);  //操作结果写入系统日志
            $this->success(lang('comm_update_success'));
        }
    }


    /**
     * 新增导航
     * @return mixed
     */
    public function add_nav($pid = 0)
    {
        if( !empty($pid) ){
            $parentNav = $this->Nav->getNav($pid);
            $this->assign('parentNav',$parentNav);
        }
        $id = request()->param('id');
        $this->Nav->setPositionId($id);
        if( !empty($id) ){
            $position = $this->Nav->getPosition();
            $this->assign('position',$position);
        }
        $topNavList = $this->Nav->getNavList(0);
        $this->assign('topNavList',$topNavList);

        $positions = $this->Nav->select1LevelPositions();
        $this->assign('positions',$positions);

        return $this->fetch();
    }


    /**
     * 编辑导航
     * @return mixed
     */
    public function edit_nav()
    {
        $id = request()->param('id');
        if( !empty($id) ){
            $nav = $this->Nav->getNav($id);
            $selectedPosition = explode(',',$nav['position']);
            foreach ($selectedPosition as $key => $positionId){
                $selectedPosition[$key] = $this->Nav->getPosition($positionId);
            }
            switch ($nav['link_type']){
                case 1:
                    $selectedLinkParam = api('shop','Goods','goodsInfo',[$nav['link_param']]);
                    break;
                case 2:
                    $selectedLinkParam = api('shop','Goods','categoryInfo',[$nav['link_param']]);
                    break;
                case 3:
                    $selectedLinkParam = api('web','Common','columnInfo',[$nav['link_param']]);
                    break;
                case 4:
                    $selectedLinkParam = api('web','Common','contentInfo',[$nav['link_param']]);
                    $selectedLinkParam['name'] = $selectedLinkParam['title'];
                    break;
                default:
                    $selectedLinkParam = ['id'=>'','name'=>''];
            }
            $this->assign('selectedLinkParam',$selectedLinkParam);
            $this->assign('selectedPosition',$selectedPosition);
            $this->assign('nav',$nav);
        }else{
            $this->error('请选择需要编辑的导航!');
        }
        if( !empty($nav['parent_tree']) ){
            $tree = array_filter(explode(',',$nav['parent_tree']));
            $this->assign('tree',$tree);
            $topNavList = [];
            $topNavList[0] = $this->Nav->getNavList(0);
            array_pop($tree);
            foreach ($tree as $key=>$item){
                $topNavList[$key] = $this->Nav->getNavList($item);
            }
        }else{
            $topNavList = $this->Nav->getNavList(0);
        }

        $this->assign('topNavList',$topNavList);
        $positions = $this->Nav->selectPositions(false,true);
        $this->assign('positions',$positions);

        return $this->fetch();
    }


    /**
     * 删除导航
     * @return mixed
     */
    public function del_nav()
    {
        if( empty($this->post_data['id']) ){
            $this->error(lang('nav_please_select_delete_nav'));
        }
        $id = $this->post_data['id'];
        $del = api('sys','Nav','deleteNav',[$id]);
        if( $del !== true ){
            sys_log(lang('comm_delete_error').':'.$del,0);  //操作结果写入系统日志
            $this->error($del);
        }else{
            sys_log(lang('comm_delete_success'),1);  //操作结果写入系统日志
            $this->success(lang('comm_delete_success'));
        }
    }


    /**
     * 保存导航
     * @return mixed
     */
    public function save_nav()
    {
        $data = $this->post_data;
        if( empty($data['name']) ){
            $this->error(lang('nav_please_entry_nav_name'));
        }elseif ( empty($data['link_type']) ){
            $this->error(lang('nav_please_select_link_type'));
        }
        if( $data['link_type'] != 5 ){
            $data['link'] = api('sys','Nav','getUrl',[$data['link_type'],$data['link_param']]).$data['link_extra_param'];
        }
        $data['pid'] = array_filter($data['pid']);
        $data['pid'] = end($data['pid']);
        if( !empty($data['pid']) ){
            $parentTree = api('sys','Nav','getNav',[$data['pid']]);
            $data['parent_tree'] = $parentTree['parent_tree'].','.$parentTree['id'];
        }

        unset($data['type']);
        $data['position'] = implode(',',$data['nav_position']);
        unset($data['nav_position']);
        $data['start_time'] = strtotime($data['start_time']);
        $data['end_time'] = strtotime($data['end_time']);
        // 保存数据

        if( empty($data['id']) ){
            $save = api('sys','Nav','saveNav',[$data]);
            if( $save !== true ){
                sys_log(lang('comm_insert_error').':'.$save,0);  //操作结果写入系统日志
                $this->error($save);
            }else{
                sys_log(lang('comm_insert_success'),1);  //操作结果写入系统日志
                $this->success(lang('comm_insert_success'));
            }
        }else{
            $save = api('sys','Nav','updateNav',[$data['id'],$data]);
            if( $save !== true ){
                sys_log(lang('comm_update_error').':'.$save,0);  //操作结果写入系统日志
                $this->error($save);
            }else{
                sys_log(lang('comm_update_success'),1);  //操作结果写入系统日志
                $this->success(lang('comm_update_success'));
            }
        }

    }


    /**
     * 获取搜索的值
     * @return mixed
     */
    public function searchLinkParam()
    {
        if( empty(request()->post('link_type')) ){
            $this->error("请选择需要搜索的类型");
        }
        $link_type = request()->post('link_type');
        $link_param = empty(request()->post('link_search')) ? '' : request()->post('link_search');
        $data = [];
        switch ($link_type){
            case 1:
                $data = api('shop','Goods','searchGoods',[$link_param]);
                break;
            case 2:
                $data = api('shop','Goods','searchGoodsCategory',[$link_param]);
                break;
            case 3:
                $data = api('web','Common','searchColumn',[$link_param]);
                break;
            case 4:
                $data = api('web','Common','searchContent',[$link_param]);
                break;
            default:
                $this->error('搜索类型错误');
        }
        if( empty($data) ){
            $this->error('当前搜索条件返回的数据为空!');
        }
        $this->success($data);
    }


    /**
     * 修改字段值
     * @return mixed
     */
    public function set_nav_value()
    {
        if( empty(request()->param('field')) ){
            $this->error(lang('nav_please_select_edit_field'));
        }elseif ( empty(request()->param('id')) ){
            $this->error(lang('nav_please_select_nav'));
        }elseif ( null === request()->param('value') ){
            $this->error(lang('nav_please_entry_nav_field_value'));
        }
        $field = request()->param('field');
        $id = request()->param('id');
        $value = request()->param('value');

        $updateField = api('sys','Nav','setNavField',[$id,$field,$value]);

        if( $updateField !== true ){
            sys_log(lang('comm_update_error').':'.$updateField,0);  //操作结果写入系统日志
            $this->error($updateField);
        }else{
            sys_log(lang('comm_update_success'),1);  //操作结果写入系统日志
            $this->success(lang('comm_update_success'));
        }
    }


    /**
     * ajax加载导航位
     * @param $position
     * @return mixed
     */
    public function ajaxChildPosition($position = '')
    {
        $position = empty($position) ? 0 : $position;
        $this->Nav->setPositionId($position);
        $navPositionList = $this->Nav->selectPositions(false,true);
        if( empty($navPositionList) ){
            $this->error('当前导航位没有下级。');
        }
        $this->success($navPositionList);
    }


    /**
     * ajax加载导航
     * @param $pid
     * @return mixed
     */
    public function ajaxChildNav($pid = '')
    {
        $pid = empty($pid) ? 0 : $pid;
        $navList = $this->Nav->getNavList($pid);
        if( empty($navList) ){
            $this->error('当前导航没有下级。');
        }
        $this->success($navList);
    }


    /**
     * 获取链接
     * @param $type
     * @param $param
     * @return mixed
     */
    public function getUrl($type, $param)
    {
        $url = api('sys','Nav','getUrl',[$type,$param]);
        $this->success($url);
    }


    /**
     * 更新导航系统下的所有链接
     * @return mixed
     */
    public function updateLinks()
    {
        $update = api('sys','Nav','updateLinks');
        if( $update !== true ){
            sys_log(lang('comm_update_error').':'.$update,0);  //操作结果写入系统日志
            $this->error($update);
        }else{
            sys_log(lang('comm_update_success'),1);  //操作结果写入系统日志
            $this->success(lang('comm_update_success'));
        }
    }


}