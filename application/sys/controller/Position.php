<?php
/**
 * Created by PhpStorm.
 * User: iconblog
 * Date: 2017/11/9
 * Time: 下午2:07
 */

namespace app\sys\controller;

use app\common\JunCreater\JCreater;
use app\sys\model\Position as PositionModel;
use think\Db;

class Position extends AdminBase
{


    /**
     * 模型
     * @var PositionModel
     */
    private $model;


    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->model = new PositionModel();
    }



    /**
     * 推荐位列表
     * @return mixed
     */
    public function index()
    {

        // 是否显示表格的选择列？
        $this->assign('show_check',1);

        // 表格数据
        $table_head = [
            ['id','ID','text'],
            ['name',lang('fl_list_table_name'),'text'],
            ['description',lang('fl_list_table_description'),'text'],
            ['img',lang('fl_list_table_img'),'img'],
            ['url',lang('fl_list_table_url'),'text'],
            ['status',lang('fl_list_table_status'),'switch','FriendlyLink/setVal','id'],
            ['sort',lang('fl_list_table_sort'),'input','FriendlyLink/setVal','id'],
            ['btn',lang('fl_list_table_action'),'btn'],
        ];
        $table['tb_title'] = JCreater::table_header($table_head);

        /*设置表格各行的操作按钮，
        * 设置说明： [标题,类型,提示信息,图标,样式Class,执行URL,提交参数,(显示条件)]
        */
        $btn = [
            ['查看列表','frame',lang('comm_edit_frame_title'),'fa fa-fw fa-pencil-square-o','layui-btn-normal','Position/edit','id'],
            [lang('comm_btn_edit'),'frame',lang('comm_edit_frame_title'),'fa fa-fw fa-pencil-square-o','layui-btn-normal','Position/edit','id'],
            [lang('comm_btn_del'),'confirm',lang('comm_del_confirm_msg'),'fa fa-fw fa-trash-o','layui-btn-danger','Position/dels','id'],
        ];
        $table['btn_lst'] = JCreater::table_btn($btn);

        // 设置列表页顶部按钮组
        $top_btn = [
            [lang('comm_btn_add'),'frame',lang('comm_add_frame_title'),'fa fa-fw fa-plus','layui-btn-normal','Position/add'],
            [lang('comm_btn_dels'),'confirm_form',lang('comm_dels_confirm_msg'),'fa fa-fw fa-trash-o','layui-btn-danger','Position/del'],
        ];
        $table['top_btn'] = JCreater::table_btn($top_btn);

        $this->assign($table);

        $position = $this->model->adminList();  //取出当前语言版本下的所有配置项
        $positionList = $position->all();

        $page = $position->render();
        $this->assign('data',$positionList);
        $this->assign('page', $page);

        return $this->fetch();
    }



    /**
     * 添加推荐位
     * @return mixed
     */
    public function add()
    {

        return $this->fetch();
    }


    /**
     * 编辑
     * @return mixed
     */
    public function edit($id)
    {

        $position = PositionModel::get($id);
        $data = $position->toArray();
        $this->assign('data',$data);
        return $this->fetch();
    }



    /**
     * 保存推荐位
     * @return mixed
     */
    public function save()
    {
        $data = request()->post();
        if( empty($data['name']) ){
            $this->error('请输入推荐位的名称');
        }elseif( empty($data['position']) ){
            $this->error('请输入推荐位的位置(模板调用标识)');
        }
        $save = $this->model->savePosition($data);
        if( $save['code'] == 0 ){
            sys_log('保存推荐位失败:'.$save['error']);
            $this->error($save['error']);
        }
        sys_log('保存推荐位成功!');
        $this->success('保存成功!');
    }



    /**
     * 删除推荐位
     * @return mixed
     */
    public function delete()
    {
        if ( empty(request()->post('id')) ){
            $this->error('请选择要删除的推荐位');
        }
        $id = request()->post('id');
        $position = PositionModel::get($id);
        if( empty($position) ){
            $this->error('当前推荐位不存在!');
        }

        try{
            $position->deletePosition($id);
        }catch (\Exception $e) {
            sys_log('删除推荐位失败:'.$id);
            $this->error($e->getMessage());
        }
        sys_log('删除推荐位成功:'.$id);
        $this->success('删除成功!');
    }


    /**
     * 批量删除推荐位
     * @return mixed
     */
    public function deletes()
    {
        if ( empty(request()->post('id')) ){
            $this->error('请选择要删除的推荐位');
        }
        $id = request()->post('id');
        $position = PositionModel::get($id);
        if( empty($position) ){
            $this->error('当前推荐位不存在!');
        }
        try{
            $position->deletesPosition($id);
        }catch (\Exception $e){
            sys_log('批量删除推荐位失败:'.$e->getMessage(),0);
            $this->error($e->getMessage());
        }
        sys_log('批量删除推荐位成功:'.implode(',',$id),1);
        $this->success('删除成功!');
    }




    /**
     * 查看推荐位
     * @return mixed
     */
    public function lists($id)
    {
        // 获取推荐的列表
        $bindList = $this->model->adminBindList($id);
        $page = $bindList->render();
        $data = $bindList->items();
        foreach ($data as $key=>$item)
        {
            $data[$key]['type_name'] = api('sys','Position','getTypeName',[$item['type']]);
        }

        $this->assign('data',$data);
        $this->assign('page',$page);
        return $this->fetch();
    }



    /**
     * 删除推荐位
     * @return mixed
     */
    public function deleteBind()
    {
        if ( empty(request()->post('id')) ){
            $this->error('请选择要删除的推荐位内容');
        }
        $id = request()->post('id');

        try{
            $this->model->deleteBind($id);
        }catch (\Exception $e) {
            sys_log('删除推荐位绑定内容失败:'.$id,0);
            $this->error($e->getMessage());
        }
        sys_log('删除推荐位绑定内容成功:'.$id,1);
        $this->success('删除成功!');
    }


    /**
     * 批量删除推荐位
     * @return mixed
     */
    public function deletesBind()
    {
        $data = $this->post_data;
        if( empty($data['id']) ){
            $this->error('请选择要删除的推荐位绑定');
        }
        $id = $data['id'];
        try{
            $this->model->deleteBind($id);
        }catch (\Exception $e){
            sys_log('批量删除推荐位绑定失败:'.$e->getMessage(),0);
            $this->error($e->getMessage());
        }
        sys_log('批量删除推荐位绑定成功:'.implode(',',$id),1);
        $this->success('删除成功!');
    }



    /**
     * 添加商品|内容到推荐位
     * @return mixed
     */
    public function addBind()
    {
        $param = request()->param();
        if( !empty($param['goods_id']) && is_numeric($param['goods_id']) ){// 商品
            $data = ['type'=>'1','t_id'=>$param['goods_id']];
        }elseif( !empty($param['article_id']) && is_numeric($param['article_id']) ){// 内容
            $data = ['type'=>'2','t_id'=>$param['article_id']];
        }else{
            return $this->error('选择要添加到推荐位的内容');
        }
        // 获取推荐位
        $positionBind = $this->model->adminGetBind($data['type'],$data['t_id']);
        $data['bindData'] = $positionBind;
        $this->assign($data);
        return $this->fetch();
    }



    /**
     * ajax加载推荐位
     * @param $search
     * @return mixed
     */
    public function ajaxSearchPosition($search)
    {
        if( empty($search) )
            $this->error('请输入搜索关键词');

        $data = PositionModel::searchGoods($search);
        $this->success($data);
    }



    /**
     * 保存绑定数据
     * @return mixed
     */
    public function saveBind()
    {
        $postData = $this->post_data;
        $data = $postData['bind'];
        if( empty($data) ){
            $this->error('请选择要绑定放置的推荐位');
        }
        $saveData = [];
        foreach ($data as $key=>$item){
            if( empty($item['position']) )
                $this->error('请选择要放置的推荐位!');
            $item['type'] = $postData['type'];
            $item['t_id'] = $postData['t_id'];
            $saveData[] = $item;
        }
        // 保存
        $save = $this->model->saveBind($saveData);
        if( $save['code'] == 0 ){
            sys_log('设置推荐位失败:'.$save['error'],0);
            $this->error($save['error']);
        }
        sys_log('设置推荐位成功!',1);
        $this->success('设置推荐位成功!');
    }




    /**
     * 设置友情链接字段
     * @param $id
     */
    public function setBindVal($id)
    {
        $data = input('');
        if (isset($data['field']) && isset($data['val'])){
            $field = $data['field'];
            $value = $data['val'];
        }else{
            $field = $data['field_name'];
            $value = $data['field'];
        }

        $res = Db::name('sys_position_bind')->where('id',$id)->update([$field=>$value]);
        if ($res!==false){
            sys_log(lang('comm_update_success'),1);  //操作结果写入系统日志
            $this->success(lang('comm_update_success'));
        }else{
            sys_log(lang('comm_update_error'),0);  //操作结果写入系统日志
            $this->error(lang('comm_update_error'));
        }
    }




    /**
     * 设置友情链接字段
     * @param $id
     */
    public function setVal($id)
    {
        $data = input('');
        if (isset($data['field']) && isset($data['val'])) {
            $field = $data['field'];
            $value = $data['val'];
        } else {
            $field = $data['field_name'];
            $value = $data['field'];
        }

        $res = PositionModel::get($id)->save([$field=>$value]);
        if ($res!==false) {
            sys_log(lang('comm_update_success'),1);  //操作结果写入系统日志
            $this->success(lang('comm_update_success'));
        } else {
            sys_log(lang('comm_update_error'),0);  //操作结果写入系统日志
            $this->error(lang('comm_update_error'));
        }
    }

}