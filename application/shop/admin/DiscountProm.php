<?php
// +----------------------------------------------------------------------
// | ThinkBiz System
// | 功能： 优惠活动后台管理模块
// +----------------------------------------------------------------------
// | 版权所有 2013~2017 深圳市俊网网络有限公司 [ http://www.junnet.net ]
// +----------------------------------------------------------------------
// | 官方网站：http://www.junnet.net
// +----------------------------------------------------------------------
// | 作者: 吴跃忠 <357397264@qq.com>
// +----------------------------------------------------------------------

namespace app\shop\admin;

use app\sys\controller\AdminBase;
use think\Db;
use app\common\JunCreater\JCreater;
use app\shop\validate\DiscountProm as DiscountValidate;
use app\shop\model\ShopPromotionDiscount;

class DiscountProm extends AdminBase
{
    protected $_DB;
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->_DB = new ShopPromotionDiscount();
    }

    /**
     * 优惠促销列表
     * 后台优惠促销管理列表
     * 显示数据
     *      优惠标题
     *      开始时间
     *      结束时间
     *      状    态
     *      操    作
     * 数据表: tb_promotion_discount
     */
    public function index()
    {
        //获取当前数据
        $field = 'discount_id as id,title,buy_num,start_time,end_time,status';
        $discountList = $this->_DB->field($field)->order('discount_id')->paginate(tb_config('list_rows',1,$this->lang));
        //配合后台表格
        // 是否显示表格的选择列？
        $table['show_check'] = 1;
        //title定义
        $table_head = [
            ['id','ID','text'],
            ['title',lang('prom_type_title'),'text'],
            ['buy_num',lang('prom_panic_table_buy_num'),'text'],
            ['start_time',lang('start_time'),'text'],
            ['end_time',lang('end_time'),'text'],
            ['status',lang('content_list_title_6'),'switch','DiscountProm/switchs','id'],
            ['btn',lang('content_list_title_7'),'btn'],
        ];
        $table['tb_title'] = JCreater::table_header($table_head);
        $btn = [
            [lang('comm_btn_edit'),'frame',lang('comm_edit_frame_title'),'fa fa-fw fa-pencil-square-o','layui-btn-normal','DiscountProm/edit','id'],
            [lang('comm_btn_del'),'confirm',lang('comm_del_confirm_msg'),'fa fa-fw fa-trash-o','layui-btn-danger','DiscountProm/del','id'],
        ];
        $table['btn_lst'] = JCreater::table_btn($btn);
        // 设置列表页顶部按钮组
        $top_btn = [
            [lang('comm_btn_add'),'frame',lang('comm_add_frame_title'),'fa fa-fw fa-plus','layui-btn-normal','DiscountProm/add'],
            [lang('comm_btn_dels'),'confirm_form',lang('comm_dels_confirm_msg'),'fa fa-fw fa-trash-o','layui-btn-danger','DiscountProm/del'],
        ];
        $table['top_btn'] = JCreater::table_btn($top_btn);
        // 获取分页显示
        $page = $discountList->render();
        $this->assign('page', $page);
        $this->assign($table);
        $this->assign('data',$discountList);
        return $this->fetch('sys@Base:table');
    }

    /**
     * discount_add
     * 添加优惠活动
     *
     */
    public function add()
    {
        $form['action'] = 'save';      //表单提交的目的路径
        $form['web_title'] = lang('prom_discount_add_title');   // 页面标题
        $this->assign($form);
        //查找所有用户等级
        $user_level = Db::name('user_level')->field('id,level_name')->select();
        $this->assign('user_level',$user_level);
        //获取优惠类型
        $discount_type = Db::name('shop_discount_type')->where('status',1)->select();
        $this->assign('discount_type',$discount_type);
        return $this->fetch('add');
    }

    /**
     * 优惠活动保存
     * ：检测优惠商品是否存在，检测优惠数量是否小于库存数量，检测商品价格是否小于当前售价
     */
    public function save()
    {
        $postData  = $this->post_data;
        //数据筛选
        $validate = new discountValidate();
        $vaData = $validate->check($postData);
        if( !$vaData ) {
            $this->error($validate->getError());
        }

        unset($postData['file']);
        //设置促销商品
        $goods = $postData['goods'];
        unset($postData['goods']);
        $goodsspec = $postData['goodsspec'];
        unset($postData['goodsspec']);
        $i = 0;
        foreach ($goods as $good_id){
            //检测当前商品是否存在
            $goods_id = Db::name('shop_goods')->where('id',$good_id)->value('id');
            if ( empty($goods_id) ){
                $this->error(lang('goods_does_not_exist'));
            }

            //验证商品规格是否存在
            $spec_json = htmlspecialchars_decode($goodsspec[$good_id]);
            $spec_arr = json_decode($spec_json,true);
            if( !empty($spec_arr) ){
                $spec_id_arr = array_keys($spec_arr);
                foreach ($spec_id_arr as $spec_id){
                    $spec_goods = Db::name('shop_spec_price')->where('id',$spec_id)->value('goods_id');
                    if( $spec_goods !== $goods_id ) {
                        $this->error(lang('goods_spec_is_failed'));
                    }
                }
                $spec_str = implode(',',$spec_id_arr);
            }else{
                $spec_str = '';
            }

            $pGoodsData[$i]['goods_id'] = $good_id;
            $pGoodsData[$i]['goods_spec'] = $spec_str;
            $i++;
        }

        //验证是编辑还是添加
        if( !empty($postData['discount_id']) )
        {
            $discount_id = $postData['discount_id'];
            $prom_id = Db::name('shop_promotion')->where(['p_type'=>3,'p_id'=>$discount_id])->value('prom_id');
            unset($postData['group_id']);

            Db::startTrans();
            try {
                //保存优惠表
                $this->_DB->where('discount_id',$discount_id)->update($postData);
                //保存促销表
                $promData['goods'] = implode(',',$goods);
                $promData['start_time'] = $postData['start_time'];
                $promData['end_time'] = $postData['end_time'];
                Db::name('shop_promotion')->where('prom_id',$prom_id)->update($promData);
                //保存进促销商品表
                foreach ($pGoodsData as $goodsDatum){
                    //查询商品是否已经在列表中，如果已经在列表中，则是修改，否则添加
                    $prom_goods_id = Db::name('shop_promotion_goods')->where('goods_id',$goodsDatum['goods_id'])->value('id');
                    if( empty($prom_goods_id) ){
                        //插入
                        $goodsDatum['prom_id'] = $prom_id;
                        Db::name('shop_promotion_goods')->insert($goodsDatum);
                    }else{
                        //修改
                        Db::name('shop_promotion_goods')->where(['prom_id'=>$prom_id,'goods_id'=>$goodsDatum['goods_id']])->update(['goods_spec'=>$goodsDatum['goods_spec']]);
                    }
                }
                //删除没有被选中的商品
                Db::name('shop_promotion_goods')->where('prom_id',$prom_id)->where('goods_id not in('.$promData['goods'].')')->delete();

                Db::commit();
            }catch(\Exception $e){
                Db::rollback();
                $this->error($e->getMessage());
            }
        }else{
            //保存优惠信息
            Db::startTrans();
            try {
                //保存进优惠表
                $savediscount = $this->_DB->insertGetId($postData);

                //保存进促销表
                $promData['p_type'] = 3;
                $promData['p_id'] = $savediscount;
                $promData['goods'] = implode(',',$goods);
                $promData['start_time'] = $postData['start_time'];
                $promData['end_time'] = $postData['end_time'];
                $saveProm = Db::name('shop_promotion')->insertGetId($promData);

                //保存进促销表
                $p_count = count($pGoodsData);
                for ($i=0;$i<$p_count;$i++){
                    $pGoodsData[$i]['prom_id'] = $saveProm;
                }
                Db::name('shop_promotion_goods')->insertAll($pGoodsData);
                //提交
                Db::commit();
            }catch(\Exception $e){
                Db::rollback();
                $this->error($e->getMessage().'1234');
            }
        }
        $this->success(lang('prom_discount_save_success'));
    }

    /**
     * 优惠编辑
     * 编辑优惠信息
     */
    public function edit()
    {
        //查找所有用户等级
        $user_level = Db::name('user_level')->field('id,level_name')->select();
        $this->assign('user_level',$user_level);
        //获取优惠数据
        $discountData = $this->_DB->where('discount_id',$this->request->param('id'))->find();
        $discountData['user_group_arr'] = explode(',',$discountData['user_group']);
        //获取商品规格信息
        $prom_id = getPromID(3,$discountData['discount_id']);
        $goodsspec = Db::name('shop_promotion_goods')->field('goods_id,goods_spec')->where('prom_id',$prom_id)->find();
        //定义商品信息及商品规格信息
        $discountData['goodsspec'] = explode(',',$goodsspec['goods_spec']);
        //查询出所有选中的商品
        $goodsIdArr = Db::name('shop_promotion_goods')->field('goods_id,goods_spec')->where('prom_id',$prom_id)->select();
        $goods = [];
        foreach ($goodsIdArr as $goodsArr){
            $goodsInfo = Db::name('shop_goods')->field('id,title,shop_price,stock')->where('id',$goodsArr['goods_id'])->find();
            $goodsInfo['goods_spec'] = $goodsArr['goods_spec'];
            $goods[] = $goodsInfo;
        }
        $this->assign('goods',$goods);

        $form['action'] = 'save';      //表单提交的目的路径
        $form['web_title'] = lang('prom_discount_edit_title').'：&nbsp;&nbsp;'.$discountData['title'];   // 页面标题
        //获取优惠类型
        $discount_type = Db::name('shop_discount_type')->where('status',1)->select();
        //获取优惠表单
        $Promotion = new Promotion();
        $discount_form = $Promotion->getDiscountForm($discountData['discount_type'],$discountData['expression']);

        //获取选择中的商品


        $this->assign('discount_form',$discount_form);
        $this->assign('discount_type',$discount_type);
        $this->assign($form);
        $this->assign('discountData',$discountData);

        return $this->fetch('edit');
    }

    /**
     * 优惠商品删除，根据管理员权限设置删除方式
     */
    public function del($id = '')
    {
        //删除当前优惠活动
        if( $id == '' ) {
            $this->error(lang('PromID_is_null'));
        }
        //获取要删除的总表ID
        $prom_id_arr = Db::name('shop_promotion')->where(['p_type'=>3])->where('p_id in('.$id.')')->column('prom_id');
        //删除当前促销
        if( is_array($id) ) {

            Db::startTrans();
            try{
                $this->_DB->where('discount_id in('.$id.')')->delete();
                Db::name('shop_promotion')->where('prom_id in('.$prom_id_arr.')')->delete();
                Db::name('shop_promotion_goods')->where('prom_id in('.$prom_id_arr.')');
                Db::commit();
            }catch (\Exception $e){
                Db::rollback();
                $this->error($e->getMessage());
            }
        }else{
            Db::startTrans();
            try{
                $this->_DB->where('discount_id',$id)->delete();
                Db::name('shop_promotion')->where(['p_type'=>3,'p_id'=>$id])->delete();
                Db::name('shop_promotion_goods')->where('prom_id in('.$prom_id_arr.')');
                Db::commit();
            }catch (\Exception $e){
                Db::rollback();
                $this->error($e->getMessage());
            }
        }
        $this->success(lang('delete_success'));
    }

    public function switchs()
    {
        if (request()->isPost()) {
            $data = input();
            foreach ($data as $key => $value) {
                $param_arr = explode('_', $key);
                if (count($param_arr) > 1) {
                    $length = count($param_arr);
                    $model = '';
                    for ($i = 0; $i < $length - 1; $i++) {
                        $model .= $param_arr[$i] . '_';
                    }
                    $id = $value;
                }
            }
            $res = $this->_DB->where('id', $id)->setField('status', $data['val']);

            if ($res !== false) {
                sys_log(lang('comm_update_success'), 1);  //操作结果写入系统日志
                $this->success(lang('comm_update_success'));
            } else {
                sys_log(lang('comm_update_error'), 0);  //操作结果写入系统日志
                $this->error(lang('comm_update_error'));
            }
        } else {
            sys_log(lang('comm_request_error'), 0);  //操作结果写入系统日志
            $this->error(lang('comm_request_error'));
        }
    }
}