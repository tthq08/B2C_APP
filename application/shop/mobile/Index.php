<?php
// +----------------------------------------------------------------------
// | ThinkBiz System
// | 功能： 商城模块前台主控制器	
// +----------------------------------------------------------------------
// | 版权所有 2013~2017
// +----------------------------------------------------------------------
// | 作者: 余剑华 <528526198@qq.com>
// +----------------------------------------------------------------------

namespace app\shop\mobile;

use app\mshop\home\HomeBase;
use think\Db;
use app\mshop\api\Jssdk;

class Index extends HomeBase
{

    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub

        $this->assign('user',session('user'));

    }

    public function index()
    {
        $panicList = api('shop','Promotion','showPanicList',[0,3]);

        $this->assign($panicList);
        //dump(cookie('wechat'));
        return $this->fetch();
    }

    public function classify()
    {
        $history = cookie('goods_history');
        $goodsLog = [];
        if (!empty($history)) {
            krsort($history);
            foreach ($history as $key => $goods_id) {
                $goodsLog[$key] = Db::name('shop_goods') ->find($goods_id);
            }
        }

        // dump($goodsLog);
        $this->assign('goods_log',$goodsLog);
        return $this->fetch();
    }

     // 手动点击加载更多商品时获取商品数据
    public function ajaxGoods($page,$nums=4,$is_new=0)
    {
        $span = $nums;
        $where['status'] = 1;
        $where['is_audit'] = 1;
        $where['trash'] = 0;
        if($is_new==1){
            $where['is_new'] = 1;
        }
        $goods = Db::name('shop_goods') ->where($where) ->order('create_time DESC') ->limit($page*$span,$span) ->select();
        $this->assign('goods_list',$goods);
        return $this->fetch();
    }

    /**
	* ajax获取指定分类下的推荐商品
	*
	* @param int $id  分类ID
	*/ 
    public function ajaxGetCateCommGoods($cat_id)
    {
    	// 获取分类下的所有子分类ID
    	$ids = Db::name('goods_category') ->where("FIND_IN_SET($cat_id,parent_id_path)")->column('id','id');
    	$ids = implode(',', $ids);
    	
    	$goods_list = Db::name('shop_goods') ->where('cat_id','IN',$ids) ->cache(true) ->select();
    	$this->assign('goodsList',$goods_list);
    	return $this->fetch();
    }


     // 二维码
    public function qr_code(){
        include EXTEND_PATH.'/phpqrcode/phpqrcode.php';
        $param = input();
        $url = base64_decode($param['data']);
            error_reporting(E_ERROR);
            \QRcode::png($url);          
    }

    // 查询支付流水的支付状态
    public function check_order_pay_status($serial_id=0)
    {
        $order_pay = Db::name('shop_order_pay') ->where('id',$serial_id) ->value('is_pay');
        if (!empty($order_pay)) {
            $this->success('支付完成');
        }else{
            $this->error('支付状态仍未完成');
        }
    }

    public function flash_buy()
    {
        $type = empty( request()->param('type') ) ? 1 : request()->param('type');

        $page = empty( request()->param('page') ) ? 1 : request()->param('page');

        $panicList = api('shop','Promotion','showPanicList',[$type,25,$page]);

        $this->assign($panicList);
        if( request()->isAjax() )
        {
            return $this->fetch('gettimesflashbuy');
        }
        return $this->fetch();
    }

    public function getLang()
    {
        dump(cookie('think_var'));
    }

    public function group_buy()
    {
        return $this->fetch();
    }

    public function new_goods()
    {
        return $this->fetch();
    }

    public function hot_goods()
    {
        return $this->fetch();
    }

    public function activity()
    {
        return $this->fetch();
    }

    // 手动点击加载更多商品时获取商品数据
    public function ajaxHotGoods($page,$nums=5,$is_hot=0)
    {
        $span = $nums;
        $where['status'] = 1;
        $where['is_audit'] = 1;
        $where['trash'] = 0;
        if($is_hot==1){
            $where['is_hot'] = 1;            
        }
        $goods = Db::name('shop_goods') ->where($where) ->order('sales_sum DESC') ->limit($page*$span,$span) ->select();
        $this->assign('goods_list',$goods);
        return $this->fetch('ajaxhostgoods');
    }


    // 从微信公众号访问页面时自动登录微信用户
    /*public function mpuserlogin()
    {
        $data = input('');
        $config = $this->wexConfing;
        // dump($config);
        $url = 'https://api.weixin.qq.com/sns/oauth2/access_token?appid='.$config['appid'].'&secret='.$config['appsecret'].'&code='.$data['code'].'&grant_type=authorization_code';
        $back = httpRequest($url,'GET');
        $back = json_decode($back,true);
        // dump($back);die;
        cookie('wechat',$back,7000);
        if ($data['state']!=='Pay') {
            $this->redirect('shop/index/index');
        }
        return $back;
    }*/
}